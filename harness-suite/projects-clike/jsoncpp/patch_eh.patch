diff --git a/src/lib_json/json_value.cpp b/src/lib_json/json_value.cpp
index aa2b744..c3620a5 100644
--- a/src/lib_json/json_value.cpp
+++ b/src/lib_json/json_value.cpp
@@ -212,13 +212,17 @@ JSONCPP_NORETURN void throwLogicError(String const& msg) {
   throw LogicError(msg);
 }
 #else // !JSON_USE_EXCEPTION
+extern "C" void wasmfuzz_exit_testcase()
+    __attribute__((__noreturn__))
+    __attribute__((__import_module__("wasmfuzz"), __import_name__("exit_testcase")));
+
 JSONCPP_NORETURN void throwRuntimeError(String const& msg) {
   std::cerr << msg << std::endl;
-  abort();
+  wasmfuzz_exit_testcase();
 }
 JSONCPP_NORETURN void throwLogicError(String const& msg) {
   std::cerr << msg << std::endl;
-  abort();
+  wasmfuzz_exit_testcase();
 }
 #endif
 
diff --git a/src/test_lib_json/fuzz.cpp b/src/test_lib_json/fuzz.cpp
index 5b75c22..8367d3b 100644
--- a/src/test_lib_json/fuzz.cpp
+++ b/src/test_lib_json/fuzz.cpp
@@ -11,10 +11,6 @@
 #include <memory>
 #include <string>
 
-namespace Json {
-class Exception;
-}
-
 extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
   Json::CharReaderBuilder builder;
 
@@ -45,10 +41,7 @@ extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {
 
   Json::Value root;
   const auto data_str = reinterpret_cast<const char*>(data);
-  try {
-    reader->parse(data_str, data_str + size, &root, nullptr);
-  } catch (Json::Exception const&) {
-  }
+  reader->parse(data_str, data_str + size, &root, nullptr);
   // Whether it succeeded or not doesn't matter.
   return 0;
 }
