diff --git a/programs/fuzz/Makefile b/programs/fuzz/Makefile
index 71cba0bcd..3dfd507db 100644
--- a/programs/fuzz/Makefile
+++ b/programs/fuzz/Makefile
@@ -1,13 +1,13 @@
 MBEDTLS_TEST_PATH:=../../tests
 
+CFLAGS ?= -g -O2 -flto
+
 MBEDTLS_PATH := ../..
 include ../../scripts/common.make
 
 DEP=${MBEDLIBS}
 
-ifdef FUZZINGENGINE
-LOCAL_LDFLAGS += -lFuzzingEngine
-endif
+LOCAL_LDFLAGS += ${FUZZ_LDFLAGS}
 
 # A test application is built for each fuzz_*.c file.
 APPS = $(basename $(wildcard fuzz_*.c))
diff --git a/tf-psa-crypto/drivers/builtin/src/entropy_poll.c b/tf-psa-crypto/drivers/builtin/src/entropy_poll.c
index 611768cd8..53a4566f0 100644
--- a/tf-psa-crypto/drivers/builtin/src/entropy_poll.c
+++ b/tf-psa-crypto/drivers/builtin/src/entropy_poll.c
@@ -29,9 +29,11 @@
 
 #if !defined(MBEDTLS_NO_PLATFORM_ENTROPY)
 
+
 #if !defined(unix) && !defined(__unix__) && !defined(__unix) && \
     !defined(__APPLE__) && !defined(_WIN32) && !defined(__QNXNTO__) && \
-    !defined(__HAIKU__) && !defined(__midipix__) && !defined(__MVS__)
+    !defined(__HAIKU__) && !defined(__midipix__) && !defined(__MVS__) && \
+    !defined(__wasm__)
 #error \
     "Platform entropy sources only work on Unix and Windows, see MBEDTLS_NO_PLATFORM_ENTROPY in mbedtls_config.h"
 #endif
@@ -110,6 +112,19 @@ static int getrandom_wrapper(void *buf, size_t buflen, unsigned int flags)
           (__DragonFly__ && __DragonFly_version >= 500700) */
 #endif /* __FreeBSD__ || __DragonFly__ */
 
+#if defined(__wasm__)
+#include <errno.h>
+#include <sys/random.h>
+#define HAVE_GETRANDOM
+static int getrandom_wrapper(void *buf, size_t buflen, unsigned int flags)
+{
+    (void) flags;
+    if (!getentropy(buf, buflen))
+        return buflen;
+    return 0;
+}
+#endif
+
 /*
  * Some BSD systems provide KERN_ARND.
  * This is equivalent to reading from /dev/urandom, only it doesn't require an
diff --git a/tf-psa-crypto/drivers/builtin/src/platform_util.c b/tf-psa-crypto/drivers/builtin/src/platform_util.c
index 19ef07aea..ecf6d08a3 100644
--- a/tf-psa-crypto/drivers/builtin/src/platform_util.c
+++ b/tf-psa-crypto/drivers/builtin/src/platform_util.c
@@ -260,4 +260,11 @@ mbedtls_ms_time_t mbedtls_ms_time(void)
 #else
 #error "No mbedtls_ms_time available"
 #endif
+
+#else
+mbedtls_ms_time_t mbedtls_ms_time(void)
+{
+    return 0;
+}
+
 #endif /* MBEDTLS_HAVE_TIME && !MBEDTLS_PLATFORM_MS_TIME_ALT */
diff --git a/tf-psa-crypto/drivers/builtin/src/timing.c b/tf-psa-crypto/drivers/builtin/src/timing.c
index 58f1c1ec2..5a3a9a78b 100644
--- a/tf-psa-crypto/drivers/builtin/src/timing.c
+++ b/tf-psa-crypto/drivers/builtin/src/timing.c
@@ -15,7 +15,7 @@
 
 #if !defined(unix) && !defined(__unix__) && !defined(__unix) && \
     !defined(__APPLE__) && !defined(_WIN32) && !defined(__QNXNTO__) && \
-    !defined(__HAIKU__) && !defined(__midipix__)
+    !defined(__HAIKU__) && !defined(__midipix__) && !defined(__wasm__)
 #error "This module only works on Unix and Windows, see MBEDTLS_TIMING_C in mbedtls_config.h"
 #endif
 
@@ -32,7 +32,9 @@ struct _hr_time {
 
 #include <unistd.h>
 #include <sys/types.h>
+#if !defined(__wasm__)
 #include <signal.h>
+#endif
 /* time.h should be included independently of MBEDTLS_HAVE_TIME. If the
  * platform matches the ifdefs above, it will be used. */
 #include <time.h>
